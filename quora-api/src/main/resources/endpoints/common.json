{
  "swagger": "2.0",
  "info": {
    "title": "Common API",
    "version": "1.0.0",
    "description": "API of Common Services"
  },
  "host": "quora.io",
  "schemes": [
    "http",
    "https"
  ],
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "API#002 Common",
      "description": "All operations marked with 'API#002 Common' are relevant to the common use case"
    }
  ],
  "securityDefinitions": {
    "BearerAuthorization": {
      "type": "basic",
      "description": "Bearer authentication (also called token authentication) is an HTTP authentication scheme that involves security tokens called bearer tokens. The name “Bearer authentication” can be understood as “give access to the bearer of this token.”\nThe bearer token is a cryptic string, usually generated by the server in response to a login request. The client must send this token in the Authorization header when making requests to protected resources:\n``` Authorization: Bearer <token>\n```\nSimilarly to Basic authentication, Bearer authentication should only be used over HTTPS (SSL).\nRead https://jwt.io/introduction/ for more information on JWT standard.\n"
    }
  },
  "paths": {
    "/userprofile/{userId}": {
      "x-swagger-router-controller": "api",
      "get": {
        "tags": [
          "API#002 User Details"
        ],
        "security": [
          {
            "BearerAuthorization": [
            ]
          }
        ],
        "operationId": "fetchUserDetails",
        "summary": "userProfile",
        "description": "A user who needs to get the details of the other user\n",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/userId"
          },
          {
            "$ref": "#/parameters/BearerAuthorization"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Successfully fetched the user details",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              },
              "location": {
                "type": "string",
                "description": "Location of the new resource which was created by this request"
              }
            },
            "schema": {
              "$ref": "#/definitions/UserDetailsResponse"
            }
          },
          "400": {
            "description": "BAD REQUEST - server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, mandatory elements are missing)",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - user has provided wrong credentials",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "403": {
            "description": "FORBIDDEN - request has not been applied because client application has no permission to perform action",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "422": {
            "description": "UNPROCESSABLE ENTITY - request was well-formed but server unable to process due to semantic errors",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request flow to the backend"
              }
            }
          },
          "500": {
            "description": "INTERNAL SERVER ERROR - server encountered an unexpected condition that prevented it from fulfilling the request.",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          }
        }
      }
    }
  },
  "parameters": {
    "userId": {
      "name": "userId",
      "type": "string",
      "in": "path",
      "required": true,
      "description": "Unique identifier of User in a standard UUID format"
    },
    "BearerAuthorization": {
      "name": "authorization",
      "type": "string",
      "in": "header",
      "required": true,
      "description": "Mandatory user credentials in bearer http authentication scheme format."
    }
  },
  "definitions": {
    "UserDetailsResponse": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string",
          "description": "First name of the user"
        },
        "last_name": {
          "type": "string",
          "description": "Last name of the user"
        },
        "user_name": {
          "type": "string",
          "description": "Username"
        },
        "email_address": {
          "type": "string",
          "description": "Email address of the user"
        },
        "country": {
          "type": "string",
          "description": "Country of the user"
        },
        "aboutMe": {
          "type": "string",
          "description": "Details of the user"
        },
        "dob": {
          "type": "string",
          "description": "Date of birth of the user"
        },
        "contact_number": {
          "type": "string",
          "description": "Mobile number of the user"
        }
      }
    }
  }
}